from Tree import Tree_Generate as TG, H3_Tree_User as HTU
from Code import Config as C,Check_Z as CZ

Z=[[0.5919975020541041, 0.16978120172650074, 0.002679383594615933, 0.08261113237160331, 0.04084145133634332, 0.03101796444601721,
    0.08107136447081542],
   [0.3774506938587821, 0.24847014412751578, 0.00025870227874202765, 0.10876867971957876, 0.20815910044550112,0.009157576161040851,
    0.04773510340883977],
   [0.024629084684645537, 0.005915741035143598, 0.3251565658669345, 0.21365970707316095, 0.018479264634462454, 0.14576269746696802,
    0.26639693923868496],
   [0.11248716316489142, 0.026466286802978144, 0.02701649842524082, 0.27024076057618074, 0.16156655454037044, 0.1295238094130815,
    0.2726989270772569],
   [0.10152422089083628, 0.035168970541372635, 0.0006190079941958227, 0.10721085840789074, 0.3353262958989148, 0.30776959089642114,
    0.11238105537036865],
   [0.301881285408378, 0.05111975839951162, 2.0644887582082526e-05, 0.12631365796033242, 0.11053400154003398, 0.3310900926504395,
    0.07904055915372253], [0.04303616624726446, 0.022599735563245064, 0.03215015334398363, 0.19985506439503894, 0.0530304548792528,
                           0.22580866021355986, 0.4235197653576553]]

root_value = HTU.Hex_Value_Address()
root = TG.generate_location_tree_hex(root_value)
Sub_tree = root.children[0]
Epsilon_c=int(C.config['Obfuscation']['Epsilon'])
CPR_prior_prob=[1 / (len(Sub_tree.leaves)) for i in range(len(Sub_tree.leaves))]

x_coord = []
y_coord = []
for i in range(len(Sub_tree.leaves)) :
    x_coord.append(Sub_tree.leaves[i].x1)
    y_coord.append(Sub_tree.leaves[i].y1)

CZ.isValid_Z(Z,Epsilon_c,CPR_prior_prob,x_coord,y_coord)
